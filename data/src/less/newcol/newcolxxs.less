// XXSmall screen
@screen-xxs:                  320px;
@screen-xxs-min:              @screen-xxs;
@screen-xxs-small:      			@screen-xxs-min;

// So media queries don't overlap when required, provide a maximum
@screen-xxs-max:              (@screen-xs-min - 1);

//== Container sizes
// Small screen / narrow phone
// For @screen-xs-min and up.
@container-mobile:             100%;
@container-xs:                 @container-mobile;
@container-xxs:                (@screen-xxs - 14px);

// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.
.make-grid-xxscolumns() {
  // Common styles for all sizes of grid columns, widths 1-12
  .col(@index) when (@index = 1) { // initial
    @item: ~".col-xxs-@{index}";
    .col((@index + 1), @item);
  }
  .col(@index, @list) when (@index =< @grid-columns) { // general; "=<" isn't a typo
    @item: ~".col-xxs-@{index}";
    .col((@index + 1), ~"@{list}, @{item}");
  }
  .col(@index, @list) when (@index > @grid-columns) { // terminal
    @{list} {
      position: relative;
      // Prevent columns from collapsing when empty
      min-height: 1px;
      // Inner gutter via padding
      padding-left:  (@grid-gutter-width / 2);
      padding-right: (@grid-gutter-width / 2);
    }
  }
  .col(1); // kickstart it
}

.make-grid-xxscolumns();
.make-grid-columns-float(xxs);
.make-grid(@grid-columns, xxs, width);
.make-grid(@grid-columns, xxs, pull);
.make-grid(@grid-columns, xxs, push);
.make-grid(@grid-columns, xxs, offset);

// Generate the xxsmall columns
.make-xxs-column(@columns; @gutter: @grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left:  (@gutter / 2);
  padding-right: (@gutter / 2);

  @media (min-width: @screen-xxs-min) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}
.make-xxs-column-offset(@columns) {
  @media (min-width: @screen-xxs-min) {
    margin-left: percentage((@columns / @grid-columns));
  }
}
.make-xxs-column-push(@columns) {
  @media (min-width: @screen-xxs-min) {
    left: percentage((@columns / @grid-columns));
  }
}
.make-xxs-column-pull(@columns) {
  @media (min-width: @screen-xxs-min) {
    right: percentage((@columns / @grid-columns));
  }
}
